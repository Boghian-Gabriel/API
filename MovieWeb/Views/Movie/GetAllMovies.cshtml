@model IEnumerable<API.Model.Movie>
@*@using PagedList.Mvc;
@model PagedList.IPagedList<API.Model.Movie>*@

@{
    ViewData["Title"] = "GetAllMovies";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="jumbotron bg-secondary bg-gradient text-white p-5 shadow-sm">
    <h1 class="display-4">Hello, friends!</h1>
    <p class="lead">Learn about API using ASP.NET 6.0 EF Core (Code First Approach). </p>
    <hr class="my-4">
    <p>List with all Movies</p>
    <a class="btn btn-sm btn-outline-secondary text-white" href="https://github.com/Boghian-Gabriel/API" role="button">Learn more about this project</a>
</div>

<div class="mt-4 d-flex justify-content-between mb-1">
    <div>
        <input type="submit" value="Create new movie" class="btn btn-primary" onclick="location.href='@Url.Action("CreateMovie", "Movie")'" />
        <input type="submit" value="Create Raport" class="btn btn-outline-primary"/>
    </div>
    @*@Html.ActionLink("Create new movie", "CreateMovie")*@

    @using(Html.BeginForm()){
    <div class="d-sm-flex">
            @Html.TextBox("searchString",  ViewBag.CurrentFilter as string, new {@class="form-control me-2", @placeholder = "Search" })
            <button class="btn btn-outline-success " type="submit">Search</button>
    </div>    
    }  
</div>


<table class="table table-striped shadow-sm">
    <thead>
        <tr>
            <th>
                @* @Html.DisplayNameFor(model => model.Title)*@
                @Html.ActionLink("Title", "GetAllMovies", new { sortOrder = ViewBag.TitleSortParam })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Genre)*@
                @Html.ActionLink("Genre", "GetAllMovies", new { sortOrder = ViewBag.GenreSortParam })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.RealeseDate)*@
                @Html.ActionLink("RealeseDate", "GetAllMovies", new { sortOrder = ViewBag.DateSortParam })
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td style="display: none">
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RealeseDate)
            </td>
            <td>
                    <button class="btn btn-sm btn-primary">@Html.ActionLink("Edit", "EditMovie", new {  id=item.Id }, new { @style="text-decoration:none; color:white" })</button> 
                    <button class="btn btn-sm btn-info">@Html.ActionLink("Details", "GetMovie", new { id=item.Id }, new { @style="text-decoration:none; color:#000000" })</button> 
                    <button class="btn btn-sm btn-danger">@Html.ActionLink("Delete", "DeleteMovie", new {  id=item.Id }, new { @style="text-decoration:none; color:white" })</button>
            </td>
        </tr>
}

        <br />
@*      Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("GetAllMovies",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@
    </tbody>
</table>
