@model API.Model.Movie

@{
    ViewData["Title"] = "UpdateMovie";
}

<h1>UpdateMovie</h1>

<h4>Movie</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditMovie">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" style="display:none">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Genre" class="control-label"></label>
                <input asp-for="Genre" class="form-control" />
                <span asp-validation-for="Genre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RealeseDate" class="control-label"></label>
                <input asp-for="RealeseDate" class="form-control" />
                <span asp-validation-for="RealeseDate" class="text-danger"></span>
            </div>
            <div class="form-group mt-1" >
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="GetAllMovies">Back to List</a>
            </div>
        </form>
    </div>
</div>

@{
    try
    {
        if (ViewBag.msg != null)
        {
            <label style="color:darkgreen">@ViewBag.msg</label>
        }
    }
    catch (Exception ex)
    {

    }
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
